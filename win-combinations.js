
class Combination {
  constructor(randomized, matrix, winAward) {

    // Means that all the same numbers will be generated by one random frame type ( except 0 )
    this.randomized = randomized;
    this.matrix = matrix;
    this.winAward = winAward;
  }
}

export const WIN_COMBINATIONS = [
  new Combination(
    false, 
    [
      [3, 0, 3, 0, 3],
      [1, 1, 1, 1, 1],
      [3, 0, 3, 0, 3]
    ],
    400
    ),
  new Combination(
  true, 
  [
    [0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0]
  ],
  100
  ),
  new Combination(
  true, 
  [
    [1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0]
  ],
  200
  ),
  new Combination(
  true, 
  [
    [1, 0, 0, 0, 1],
    [1, 1, 0, 1, 1],
    [1, 0, 1, 0, 1]
  ],
  350
  ),
  new Combination(
  true, 
  [
    [1, 0, 0, 0, 0],
    [0, 1, 1, 1, 0],
    [0, 0, 0, 0, 1]
  ],
  150
  ),
  new Combination(
  true, 
  [
    [0, 0, 0, 0, 1],
    [0, 1, 1, 1, 0],
    [1, 0, 0, 0, 0]
  ],
  150
  ),
  new Combination(
  true, 
  [
    [1, 0, 2, 0, 3],
    [1, 0, 2, 0, 3],
    [1, 0, 2, 0, 3]
  ],
  500
  ),
  new Combination(
  true, 
  [
    [1, 0, 0, 0, 0],
    [1, 0, 0, 0, 0],
    [1, 0, 0, 0, 0]
  ],
  75
  ),
  new Combination(
  true, 
  [
    [0, 1, 0, 0, 0],
    [0, 1, 0, 0, 0],
    [0, 1, 0, 0, 0]
  ],
  75
  ),
  new Combination(
  true, 
  [
    [0, 0, 1, 0, 0],
    [0, 0, 1, 0, 0],
    [0, 0, 1, 0, 0]
  ],
  75
  ),
  new Combination(
  true, 
  [
    [0, 0, 0, 1, 0],
    [0, 0, 0, 1, 0],
    [0, 0, 0, 1, 0]
  ],
  75
  ),
  new Combination(
  true, 
  [
    [0, 0, 0, 0, 1],
    [0, 0, 0, 0, 1],
    [0, 0, 0, 0, 1]
  ],
  75
  ),
];